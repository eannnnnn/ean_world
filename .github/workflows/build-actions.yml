name: EAN-WORLD-API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        uses: pnpm/action-setup@v2
        with:
          version: 8.6
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Make ENV
        run: |
          echo APP_PORT="${{ secrets.APP_PORT }}" > .env
          echo SALT_ROUNDS="${{ secrets.SALT_ROUNDS }}" >> .env
          echo JWT_SECRET="${{ secrets.JWT_SECRET }}" >> .env
          echo FILE_SAVE_PATH="${{ secrets.FILE_SAVE_PATH }}" >> .env
          echo DB_PORT="${{ secrets.DB_PORT }}" >> .env
          echo DB_ENDPOINT="${{ secrets.DB_ENDPOINT }}" >> .env
          echo DB_USERNAME="${{ secrets.DB_USERNAME }}" >> .env
          echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> .env
          echo DB_DATABASE_NAME="${{ secrets.DB_DATABASE_NAME }}" >> .env

      - name: Install dependencies
        run: pnpm install --frozen-lock

      - name: Build
        run: pnpm build

      - name: Deploy
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: 'dist/*,.env,package.json,pnpm-lock.yaml,ecosystem.config.js'
          target: ${{ secrets.SSH_TARGET }}

      - name: Running
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            source .shrc
            cd ${{ secrets.SSH_TARGET }}
            pnpm install --frozen-lock
            pm2 reload ecosystem.config.js
